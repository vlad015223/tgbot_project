from aiogram.utils import executor
from aiogram import types
from pytube import YouTube
from moviepy.video.io.ffmpeg_tools import ffmpeg_extract_subclip
from os import walk
import os, shutil
from config import dp, bot
from buttons import back_to_the_main_menu

folder = 'C:/Dev/tgbot_proect/videos'


@dp.message_handler(text='–û–±—Ä–µ–∑–∞—Ç—å —é—Ç—É–±-–≤–∏–¥–µ–æ')
async def get_url(message: types.Message):
    await message.answer('–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ', reply_markup=back_to_the_main_menu)


@dp.message_handler(regexp='https://www.youtube.com/' or 'https://youtu.be')
async def download_720p_mp4_videos(message: types.Message):
    print('start_download')
    await message.answer('–ò–¥—ë—Ç –∑–∞–≥—Ä—É–∑–∫–∞. –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∏–¥–µ–æ')

    yt = YouTube(str(message))

    yt.streams.filter(file_extension='mp4').get_by_resolution('720p').download(folder)

    print('download started')

    try:
        #—Å–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ
        download_720p_mp4_videos(
            str(message.text)
        )
        print('download complete')
        await message.answer('–ù–∞–ø–∏—à–∏ —Ç–∞–π–º–∏–Ω–≥–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 1:30-2:40 (–Ω–µ –±–æ–ª–µ–µ 4—Ö –º–∏–Ω—É—Ç)', reply_markup=back_to_the_main_menu)

    except:
        #—á–∏—Å—Ç–∏–º –ø–∞–ø–∫—É –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –µ—Å–ª–∏ –≤—ã—à–ª–∞ –æ—à–∏–±–∫–∞
        for filename in os.listdir(folder):
            file_path = os.path.join(folder, filename)
            try:
                if os.path.isfile(file_path) or os.path.islink(file_path):
                    os.unlink(file_path)
                elif os.path.isdir(file_path):
                    shutil.rmtree(file_path)
            except Exception as e:
                print('Failed to delete %s. Reason: %s' % (file_path, e))


#–Ω–∞—Ö–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 1:30-2:40
@dp.message_handler(regexp='\w+:\w+-\w+:\w+')   
async def cut_video(message: types.Message):
    print('subclip started')
    video_title = []
    for filenames in walk(folder):
        video_title.extend(filenames)
        break
    print(video_title)

    video_timings = [message.text]
    for i in video_timings:
        list_of_video_timings = i.split('-')
    print(list_of_video_timings)

    try:
        #–ø–µ—Ä–µ–¥–µ–ª—ã–≤–∞–µ–º —É–¥–æ–±–Ω—ã–µ –º–∏–Ω—É—Ç—ã –≤ –Ω–µ—É–¥–æ–±–Ω—ã–µ —Å–µ–∫—É–Ω–¥—ã
        start = list_of_video_timings[0]
        start_in_seconds = sum(int(x) * 60 ** i for i, x in enumerate(reversed(start.split(':'))))
        end = list_of_video_timings[1]
        end_in_seconds = sum(int(x) * 60 ** i for i, x in enumerate(reversed(end.split(':'))))

        cut = f'{message.from_user.username}.mp4'

        #–æ–±—Ä–µ–∑–∞–µ–º –≤–∏–¥–µ–æ
        ffmpeg_extract_subclip(f"{folder}/{video_title[-1][-1]}", int(start_in_seconds), int(end_in_seconds), targetname=f"{folder}/{cut}")

        if message.from_user.username == cut.split('.mp4')[0]:
            await bot.send_video(message.chat.id, open(f'{folder}/{cut}', 'rb'))
        else:
            await message.answer('–£–ø—Å.. –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—åüò¢ –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –µ—â—ë —Ä–∞–∑', reply_markup=back_to_the_main_menu)
        
        #—á–∏—Å—Ç–∏–º –ø–∞–ø–∫—É
        for filename in os.listdir(folder):
            file_path = os.path.join(folder, filename)
            try:
                if os.path.isfile(file_path) or os.path.islink(file_path):
                    os.unlink(file_path)
                elif os.path.isdir(file_path):
                    shutil.rmtree(file_path)
            except Exception as e:
                print('Failed to delete %s. Reason: %s' % (file_path, e))

    except:
        await message.answer('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω—ã —Ç–∞–π–º–∫–æ–¥—ã :( –ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ —Ñ–æ—Ä–º–∞—Ç–µ 2:10-3:15', reply_markup=back_to_the_main_menu)


if __name__ == '__main__':
    executor.start_polling(dp)